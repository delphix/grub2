Description: Program vesafb on BIOS systems rather than efifb
 efifb is not appropriate on BIOS systems.  Program vesafb if GRUB already
 set up a VESA mode; otherwise fall back to plain text.
 .
 In future, we may be able to do better once Linux supports a
 hardware-agnostic simple linear framebuffer device.
Author: Colin Watson <cjwatson@ubuntu.com>
Forwarded: http://lists.gnu.org/archive/html/grub-devel/2010-07/msg00036.html
Last-Update: 2010-07-12

Index: b/loader/i386/linux.c
===================================================================
--- a/loader/i386/linux.c
+++ b/loader/i386/linux.c
@@ -463,6 +463,7 @@
   int e820_num;
   grub_err_t err = 0;
   char *modevar, *tmp;
+  grub_video_driver_id_t driver_id;
 
   params = real_mode_mem;
 
@@ -538,13 +539,17 @@
       grub_errno = GRUB_ERR_NONE;
     }
 
+  driver_id = grub_video_get_driver_id ();
+  if (driver_id != GRUB_VIDEO_DRIVER_NONE &&
+      driver_id != GRUB_VIDEO_DRIVER_VBE)
+    /* We currently have no way to pass information about other modes to
+       Linux.  */
+    grub_video_set_mode ("text", 0, 0);
+
   if (! grub_linux_setup_video (params))
     {
-      /* Use generic framebuffer unless VESA is known to be supported.  */
-      if (params->have_vga != GRUB_VIDEO_LINUX_TYPE_VESA)
-	params->have_vga = GRUB_VIDEO_LINUX_TYPE_SIMPLE;
-      else
-	params->lfb_size >>= 16;
+      params->have_vga = GRUB_VIDEO_LINUX_TYPE_VESA;
+      params->lfb_size >>= 16;
     }
   else
     {
Index: b/util/grub.d/10_linux.in
===================================================================
--- a/util/grub.d/10_linux.in
+++ b/util/grub.d/10_linux.in
@@ -61,6 +61,14 @@
     GRUB_CMDLINE_EXTRA="$GRUB_CMDLINE_EXTRA crashkernel=384M-2G:64M,2G-:128M"
 fi
 
+if grep -qx vbe "${GRUB_PREFIX}/video.lst"; then
+  LINUX_CONFIG_FB=CONFIG_FB_VESA
+elif grep -q '^efi_' "${GRUB_PREFIX}/video.lst"; then
+  LINUX_CONFIG_FB=CONFIG_FB_EFI
+else
+  LINUX_CONFIG_FB=
+fi
+
 linux_entry ()
 {
   os="$1"
@@ -78,9 +86,22 @@
 EOF
   save_default_entry | sed -e "s/^/\t/"
 
-  # Use ELILO's generic "efifb" when it's known to be available.
-  # FIXME: We need an interface to select vesafb in case efifb can't be used.
-  if [ "x$GRUB_GFXPAYLOAD_LINUX" != x ]; then
+  # Use a simple linear framebuffer appropriate to the platform if support
+  # for it is known to be built into the kernel.  We need it to be built-in
+  # rather than modular, as otherwise early output from the kernel won't
+  # work.
+  if [ "x$GRUB_GFXPAYLOAD_LINUX" = x ]; then
+      cat << EOF
+	load_video
+EOF
+      if [ "x$LINUX_CONFIG_FB" != x ] \
+	  && grep -qx "$LINUX_CONFIG_FB=y" /boot/config-${version} 2> /dev/null \
+	  && grep -qx "CONFIG_VT_HW_CONSOLE_BINDING=y" /boot/config-${version} 2> /dev/null; then
+	  cat << EOF
+	set gfxpayload=keep
+EOF
+      fi
+  else
 	  cat << EOF
 	set gfxpayload=$GRUB_GFXPAYLOAD_LINUX
 EOF
