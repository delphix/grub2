Description: properly validate grub password (CVE-2009-4128)
Author: Robert Millan
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=555195
Bug-Ubuntu: https://launchpad.net/bugs/478806

diff -Nur -x '*.orig' -x '*~' grub2-1.97~beta4/normal/auth.c grub2-1.97~beta4.new/normal/auth.c
--- grub2-1.97~beta4/normal/auth.c	2009-08-25 03:11:50.000000000 -0500
+++ grub2-1.97~beta4.new/normal/auth.c	2009-12-07 14:11:18.928076599 -0600
@@ -22,6 +22,7 @@
 #include <grub/misc.h>
 #include <grub/env.h>
 #include <grub/normal.h>
+#include <grub/time.h>
 
 struct grub_auth_user
 {
@@ -35,17 +36,19 @@
 struct grub_auth_user *users = NULL;
 
 int
-grub_auth_strcmp (const char *user_input, const char *template)
+grub_auth_strcmp (const char *s1, const char *s2)
 {
-  int ok = 1;
-  const char *ptr1, *ptr2;
-  for (ptr1 = user_input, ptr2 = template; *ptr1; ptr1++)
-    if (*ptr1 == (ptr2 ? *ptr2 : ptr1[1]) && ok && ptr2 != NULL)
-      ptr2++;
-    else
-      ok = 0;
+  int ret;
+  grub_uint64_t end;
 
-  return !ok;
+  end = grub_get_time_ms () + 100;
+  ret = grub_strcmp (s1, s2);
+
+  /* This prevents an attacker from deriving information about the
+     password from the time it took to execute this function.  */
+  while (grub_get_time_ms () < end);
+
+  return ret;
 }
 
 static int
@@ -208,6 +211,7 @@
   char login[1024];
   struct grub_auth_user *cur = NULL;
   grub_err_t err;
+  static unsigned long punishment_delay = 1;
 
   auto int hook (grub_list_t item);
   int hook (grub_list_t item)
@@ -228,11 +232,14 @@
   grub_memset (login, 0, sizeof (login));
 
   if (is_authenticated (userlist))
-    return GRUB_ERR_NONE;
+    {
+      punishment_delay = 1;
+      return GRUB_ERR_NONE;
+    }
 
   if (!grub_cmdline_get ("Enter username: ", login, sizeof (login) - 1,
 			 0, 0, 0))
-    return GRUB_ACCESS_DENIED;
+    goto access_denied;
 
   grub_list_iterate (GRUB_AS_LIST (users), hook);
 
@@ -242,15 +249,25 @@
 
       /* No users present at all.  */
       if (!cur)
-	return GRUB_ACCESS_DENIED;
+	goto access_denied;
 
       /* Display any of available authentication schemes.  */
       err = cur->callback (login, 0);
 
-      return GRUB_ACCESS_DENIED;
+      goto access_denied;
     }
   err = cur->callback (login, cur->arg);
   if (is_authenticated (userlist))
-    return GRUB_ERR_NONE;
+    {
+      punishment_delay = 1;
+      return GRUB_ERR_NONE;
+    }
+
+ access_denied:
+  grub_sleep (punishment_delay);
+
+  if (punishment_delay < GRUB_ULONG_MAX / 2)
+    punishment_delay *= 2;
+
   return GRUB_ACCESS_DENIED;
 }
