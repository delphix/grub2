Description: Fix LVM/RAID probing without device.map
 When probing LVM or RAID without a device.map, probe all devices in order
 that we will know about the underlying physical volumes.
Bug-Ubuntu: https://bugs.launchpad.net/bugs/525085
Forwarded: http://lists.gnu.org/archive/html/grub-devel/2010-03/msg00084.html
Last-Update: 2010-03-22

Index: b/ChangeLog.lvm-raid-probe
===================================================================
--- /dev/null
+++ b/ChangeLog.lvm-raid-probe
@@ -0,0 +1,15 @@
+2010-11-22  Colin Watson  <cjwatson@ubuntu.com>
+
+	* grub-core/kern/emu/hostdisk.c (store_grub_dev): New function.
+	(grub_util_biosdisk_probe_device): New function.
+	* include/grub/emu/hostdisk.h (grub_util_biosdisk_probe_device):
+	Add prototype.
+	* util/grub-probe.c (probe): If we don't have a device map and the
+	requested device has an abstraction, probe all devices and
+	reinitialise abstraction modules.
+	(main): Pass device map to probe.  Drop reinitialisation of
+	abstraction modules since we will do that in probe if necessary.
+	* util/grub-setup.c (main): If we don't have a device map, probe all
+	devices.
+	* Makefile.util.def (grub-probe): Add util/deviceiter.c.
+	(grub-setup): Likewise.
Index: b/Makefile.util.def
===================================================================
--- a/Makefile.util.def
+++ b/Makefile.util.def
@@ -247,6 +247,7 @@
   installdir = sbin;
   mansection = 8;
   common = util/grub-probe.c;
+  common = util/deviceiter.c;
 
   ldadd = libgrubmods.a;
   ldadd = libgrubkern.a;
@@ -261,6 +262,7 @@
   common = util/grub-setup.c;
   common = util/raid.c;
   common = util/lvm.c;
+  common = util/deviceiter.c;
   common = grub-core/lib/reed_solomon.c;
 
   sparc64_ieee1275 = util/ieee1275/ofpath.c;
Index: b/grub-core/kern/emu/hostdisk.c
===================================================================
--- a/grub-core/kern/emu/hostdisk.c
+++ b/grub-core/kern/emu/hostdisk.c
@@ -1443,6 +1443,48 @@
   return find_system_device (os_dev, &st, 1, 0) != -1;
 }
 
+static void
+store_grub_dev (const char *grub_disk, const char *os_disk)
+{
+  unsigned int i;
+
+  for (i = 0; i < ARRAY_SIZE (map); i++)
+    if (! map[i].device)
+      break;
+    else if (strcmp (map[i].drive, grub_disk) == 0)
+      {
+	if (strcmp (map[i].device, os_disk) == 0)
+	  return;
+	grub_util_error (_("drive `%s' already mapped to `%s'"),
+			 map[i].drive, map[i].device);
+      }
+
+  if (i == ARRAY_SIZE (map))
+    grub_util_error (_("device count exceeds limit"));
+
+  map[i].drive = xstrdup (grub_disk);
+  map[i].device = xstrdup (os_disk);
+}
+
+static int num_hd = 0;
+static int num_fd = 0;
+
+int
+grub_util_biosdisk_probe_device (const char *name, int is_floppy)
+{
+  char *grub_disk;
+
+  if (is_floppy)
+    grub_disk = xasprintf ("fd%d", num_fd++);
+  else
+    grub_disk = xasprintf ("hd%d", num_hd++);
+
+  store_grub_dev (grub_disk, name);
+  free (grub_disk);
+
+  return 0;
+}
+
 char *
 grub_util_biosdisk_get_grub_dev (const char *os_dev)
 {
Index: b/include/grub/emu/hostdisk.h
===================================================================
--- a/include/grub/emu/hostdisk.h
+++ b/include/grub/emu/hostdisk.h
@@ -24,6 +24,7 @@
 
 void grub_util_biosdisk_init (const char *dev_map);
 void grub_util_biosdisk_fini (void);
+int grub_util_biosdisk_probe_device (const char *name, int is_floppy);
 char *grub_util_biosdisk_get_grub_dev (const char *os_dev);
 const char *grub_util_biosdisk_get_osdev (grub_disk_t disk);
 int grub_util_biosdisk_is_present (const char *name);
Index: b/util/grub-probe.c
===================================================================
--- a/util/grub-probe.c
+++ b/util/grub-probe.c
@@ -30,6 +30,7 @@
 #include <grub/msdos_partition.h>
 #include <grub/emu/hostdisk.h>
 #include <grub/emu/getroot.h>
+#include <grub/util/deviceiter.h>
 #include <grub/term.h>
 #include <grub/env.h>
 #include <grub/raid.h>
@@ -89,13 +90,14 @@
 }
 
 static void
-probe (const char *path, char *device_name)
+probe (const char *path, char *device_name, const char *dev_map)
 {
   char *drive_name = NULL;
   char *grub_path = NULL;
   char *filebuf_via_grub = NULL, *filebuf_via_sys = NULL;
   grub_device_t dev = NULL;
   grub_fs_t fs;
+  struct stat dev_map_stat;
 
   if (path == NULL)
     {
@@ -119,6 +121,24 @@
       goto end;
     }
 
+  if (stat (dev_map, &dev_map_stat) == -1 &&
+      grub_util_get_dev_abstraction (device_name) != GRUB_DEV_ABSTRACTION_NONE)
+    {
+      /* If we don't have a device map, then we won't yet know about the
+         physical volumes underlying this device, so probe all devices.  */
+      grub_util_iterate_devices (grub_util_biosdisk_probe_device, 0);
+
+      /* Now reinitialise the higher layers.  */
+      grub_lvm_fini ();
+      grub_mdraid09_fini ();
+      grub_mdraid1x_fini ();
+      grub_raid_fini ();
+      grub_raid_init ();
+      grub_mdraid09_init ();
+      grub_mdraid1x_init ();
+      grub_lvm_init ();
+    }
+
   drive_name = grub_util_get_grub_dev (device_name);
   if (! drive_name)
     grub_util_error ("cannot find a GRUB drive for %s.  Check your device.map", device_name);
@@ -391,20 +411,11 @@
   /* Initialize all modules. */
   grub_init_all ();
 
-  grub_lvm_fini ();
-  grub_mdraid09_fini ();
-  grub_mdraid1x_fini ();
-  grub_raid_fini ();
-  grub_raid_init ();
-  grub_mdraid09_init ();
-  grub_mdraid1x_init ();
-  grub_lvm_init ();
-
   /* Do it.  */
   if (argument_is_device)
-    probe (NULL, argument);
+    probe (NULL, argument, dev_map ? : DEFAULT_DEVICE_MAP);
   else
-    probe (argument, NULL);
+    probe (argument, NULL, dev_map ? : DEFAULT_DEVICE_MAP);
 
   /* Free resources.  */
   grub_fini_all ();
Index: b/util/grub-setup.c
===================================================================
--- a/util/grub-setup.c
+++ b/util/grub-setup.c
@@ -34,6 +34,7 @@
 #include <grub/i18n.h>
 #include <grub/util/raid.h>
 #include <grub/util/lvm.h>
+#include <grub/util/deviceiter.h>
 #ifdef GRUB_MACHINE_IEEE1275
 #include <grub/util/ofpath.h>
 #endif
@@ -862,6 +863,7 @@
 int
 main (int argc, char *argv[])
 {
+  struct stat dev_map_stat;
   char *root_dev = NULL;
   char *dest_dev = NULL;
   int must_embed = 0;
@@ -892,6 +894,9 @@
   /* Initialize the emulated biosdisk driver.  */
   grub_util_biosdisk_init (arguments.dev_map ? : DEFAULT_DEVICE_MAP);
 
+  if (stat (arguments.dev_map ? : DEFAULT_DEVICE_MAP, &dev_map_stat) == -1)
+    grub_util_iterate_devices (grub_util_biosdisk_probe_device, 0);
+
   /* Initialize all modules. */
   grub_init_all ();
 
