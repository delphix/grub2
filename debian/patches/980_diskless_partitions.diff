Description: Handle partition devices without corresponding disk devices
 On Xen, it's possible to assign disk images in the host to things that are
 named rather like partitions in the guest (e.g. /dev/sda1), but that don't
 have an associated disk (e.g. /dev/sda); indeed, the latter device is
 nonexistent.  This confuses grub_util_biosdisk_get_grub_dev.
 .
 There's really no other situation in which I think it's terribly plausible
 that you might have /dev/sda1 but not /dev/sda, so it seems to me that in
 this case we can reasonably treat the apparent "partition" as a disk in its
 own right.
Author: Colin Watson <cjwatson@ubuntu.com>
Bug-Ubuntu: https://bugs.launchpad.net/bugs/623609
Forwarded: yes
Applied-Upstream: http://bazaar.launchpad.net/~vcs-imports/grub/grub2-bzr/revision/2832
Last-Update: 2011-09-23

diff -Nur -x '*.orig' -x '*~' grub2//util/hostdisk.c grub2.new//util/hostdisk.c
--- grub2//util/hostdisk.c	2011-09-23 11:28:58.000000000 +0100
+++ grub2.new//util/hostdisk.c	2011-09-23 11:29:18.000000000 +0100
@@ -1293,12 +1293,15 @@
 #endif
 
 static int
-find_system_device (const char *os_dev, struct stat *st)
+find_system_device (const char *os_dev, struct stat *st, int convert)
 {
   unsigned int i;
   char *os_disk;
 
-  os_disk = convert_system_partition_to_system_disk (os_dev, st);
+  if (convert)
+    os_disk = convert_system_partition_to_system_disk (os_dev, st);
+  else
+    os_disk = xstrdup (os_dev);
   if (! os_disk)
     return -1;
 
@@ -1374,7 +1377,7 @@
       return 0;
     }
 
-  drive = find_system_device (os_dev, &st);
+  drive = find_system_device (os_dev, &st, 1);
   if (drive < 0)
     {
       grub_error (GRUB_ERR_BAD_DEVICE,
@@ -1475,7 +1478,32 @@
     free (name);
 
     if (! disk)
-      return 0;
+      {
+	/* We already know that the partition exists.  Given that we already
+	   checked the device map above, we can only get
+	   GRUB_ERR_UNKNOWN_DEVICE at this point if the disk does not exist.
+	   This can happen on Xen, where disk images in the host can be
+	   assigned to devices that have partition-like names in the guest
+	   but are really more like disks.  */
+	if (grub_errno == GRUB_ERR_UNKNOWN_DEVICE)
+	  {
+	    grub_util_info
+	      ("disk does not exist, so falling back to partition device %s",
+	       os_dev);
+
+	    drive = find_system_device (os_dev, &st, 0);
+	    if (drive < 0)
+	      {
+		grub_error (GRUB_ERR_UNKNOWN_DEVICE,
+			    "no mapping exists for `%s'", os_dev);
+		return 0;
+	      }
+
+	    return make_device_name (drive, -1, -1);
+	  }
+	else
+	  return 0;
+      }
 
     grub_partition_iterate (disk, find_partition);
     if (grub_errno != GRUB_ERR_NONE)
