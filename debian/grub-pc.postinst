#!/bin/bash -e

case "$1" in
  configure)
    . /usr/share/debconf/confmodule

    if test -e /boot/grub/device.map && ! test -e /boot/grub/core.img ; then
      # Looks like your device.map was generated by GRUB Legacy, which
      # used to generate broken device.map (see #422851).  Avoid the risk
      # by regenerating it.
      grub-mkdevicemap --no-floppy
    fi

    db_get grub-pc/chainload_from_menu.lst
    if $RET && test -e /boot/grub/menu.lst && ! test -e /boot/grub/core.img ; then
      # If there's no core.img setup, create one (but do not risk writing to MBR).
      if ! test -e /boot/grub/core.img ; then
        echo "Generating core.img" >&2
        grub-install --no-floppy --grub-setup=/bin/true "(hd0)" > /dev/null
      fi

      # Update menu.lst to reflect that:
      # - core.img is present now
      # - core.img has to be the first option
      echo "Saving menu.lst backup in /boot/grub/menu.lst_backup_by_grub2_postinst" >&2
      cp /boot/grub/menu.lst{,_backup_by_grub2_postinst}
      echo "Running update-grub Legacy to hook our core.img in it" >&2
      LET_US_TRY_GRUB_2=true /usr/lib/grub-legacy/update-grub 2>&1 | sed -e "s/^/    /g" >&2
      # We just hooked GRUB 2 in menu.lst; then also generate grub.cfg.
      update-grub
    else # this `else' is mostly intended to avoid running update-grub twice
      # If grub.cfg has been generated, update it.
      if test -e /boot/grub/grub.cfg ; then
        update-grub
      fi
    fi
  ;;
  abort-upgrade|abort-remove|abort-deconfigure)
  ;;
  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
