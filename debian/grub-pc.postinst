#!/bin/bash -e

case "$1" in
  configure)
    . /usr/share/debconf/confmodule

    ucf --three-way --debconf-ok /usr/share/grub/default/grub /etc/default/grub
    ucfr grub-pc /etc/default/grub

    if grep -q "[= ]/sbin/update-grub" /etc/kernel-img.conf ; then
      echo -e "\n/etc/kernel-img.conf still contains /sbin/update-grub in the hooks." >&2
      echo -e "Running sed over it to remove the /sbin/ prefix.\n" >&2
      sed -i /etc/kernel-img.conf -e "s,\(.*\)  */sbin/update-grub$,\1 update-grub,g"
    fi
    mkdir -p /boot/grub

    if test -e /boot/grub/device.map && ! test -e /boot/grub/core.img ; then
      # Looks like your device.map was generated by GRUB Legacy, which
      # used to generate broken device.map (see #422851).  Avoid the risk
      # by regenerating it.
      grub-mkdevicemap --no-floppy
    fi

    if [ ! -z "$2" ] && test -e /boot/grub/core.img ; then
      # If we're upgrading _and_ chainload-install is likely to have happened
      db_subst grub-pc/install_devices CHOICES `sed -e "/^(fd[0-9]\+)/d;s,.*\t,,g" /boot/grub/device.map | tr '\n' ',' | sed -e 's/,$//g;s/,/, /g'`
      db_input high grub-pc/install_devices || true
      db_go
      db_get grub-pc/install_devices
      for i in `echo $RET | sed -e 's/,/ /g'` ; do
        grub-install --no-floppy $i || true
      done
    fi

    if test -e /boot/grub/menu.lst ; then
      db_get grub-pc/linux_cmdline
      if [ "$RET" == "fillme" ] ; then
        # wtf?!
        echo "Internal error in grub-pc package.  Please file a bug report." >&2
        exit 1
      elif [ "$RET" != "" ] ; then
        # escape \ and /
        RET=`echo "$RET" | sed -e 's,[\/],\\\&,g'`
        sed -i /etc/default/grub -e "s/^\(GRUB_CMDLINE_LINUX\)=.*/\1=\"$RET\"/g"
        db_set grub-pc/linux_cmdline "" || true
      fi
    fi

    db_get grub-pc/chainload_from_menu.lst
    if $RET && test -e /boot/grub/menu.lst && ! test -e /boot/grub/core.img ; then
      # If there's no core.img setup, create one (but do not risk writing to MBR).
      if ! test -e /boot/grub/core.img ; then
        echo "Generating core.img" >&2
        grub-install --no-floppy --grub-setup=/bin/true "(hd0)" > /dev/null
      fi

      # Update menu.lst to reflect that:
      # - core.img is present now
      # - core.img has to be the first option
      echo "Saving menu.lst backup in /boot/grub/menu.lst_backup_by_grub2_postinst" >&2
      cp /boot/grub/menu.lst{,_backup_by_grub2_postinst}
      echo "Running update-grub Legacy to hook our core.img in it" >&2
      LET_US_TRY_GRUB_2=true /usr/lib/grub-legacy/update-grub 2>&1 | sed -e "s/^/    /g" >&2
      # We just hooked GRUB 2 in menu.lst; then also generate grub.cfg.
      update-grub
    else # this `else' is mostly intended to avoid running update-grub twice
      # If grub.cfg has been generated, update it.
      if test -e /boot/grub/grub.cfg ; then
        update-grub
      fi
    fi

    # /boot/grub/ has more chances of being accessible by GRUB
    for i in /usr/share/grub/ascii.pf2 /usr/share/images/desktop-base/moreblue-orbit-grub.png ; do
      if test -e $i ; then
        cp $i /boot/grub/
      fi
    done
  ;;
  abort-upgrade|abort-remove|abort-deconfigure)
  ;;
  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
